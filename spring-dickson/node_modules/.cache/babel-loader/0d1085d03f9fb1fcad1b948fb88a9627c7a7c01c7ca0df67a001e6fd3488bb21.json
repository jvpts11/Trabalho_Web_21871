{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jvpts11\\\\Documents\\\\GitHub\\\\Trabalho_Web_21871\\\\spring-dickson\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport backgroundImage from './Component/Resources/red_sun_ultimate.gif';\nimport characterImage from './Component/Resources/Spring_2.0.gif';\nimport pipeImage from './Component/Resources/Pipe.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  let lastTime = 0;\n  let intervalId;\n  const [gameState, setGameState] = useState('Start'); // Start, Play, End\n  const [score, setScore] = useState(0);\n  const [characterY, setCharacterY] = useState(200);\n  const [characterVY, setCharacterVY] = useState(0);\n  const [pipes, setPipes] = useState([]);\n  const backgroundHeight = window.innerHeight;\n\n  // reference to the character element\n  const characterRef = useRef(null);\n  useEffect(() => {\n    const handleResize = () => {\n      setBackgroundHeight(window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyPress);\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n    };\n  }, []);\n  const handleKeyPress = event => {\n    if (event.key === 'Enter' && gameState === 'Start') {\n      setGameState('Play');\n    }\n  };\n\n  // generate a new set of pipes\n  const generatePipes = () => {\n    setPipes([{\n      x: 500,\n      y: -100,\n      passed: false\n    }, {\n      x: 800,\n      y: 150,\n      passed: false\n    }, {\n      x: 1100,\n      y: -50,\n      passed: false\n    }]);\n  };\n\n  // move the character based on its velocity\n  const checkCollisions = () => {\n    if (characterY < 0 || characterY > backgroundHeight) {\n      setGameState('End');\n    }\n  };\n  if (characterRef.current) {\n    let characterRect = characterRef.current.getBoundingClientRect();\n    pipes.forEach(pipe => {\n      let pipeRef = document.getElementById(`pipe${pipe.x}`);\n      if (pipeRef) {\n        let pipeRect = pipeRef.getBoundingClientRect();\n        if (characterRect.top < pipeRect.bottom && characterRect.bottom > pipeRect.top && characterRect.right > pipeRect.left && characterRect.left < pipeRect.right) {\n          // collision with a pipe\n          setGameState('End');\n        }\n      }\n    });\n  }\n  ;\n  {\n    pipes.map((pipe, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: `pipe${pipe.x}`,\n      className: \"pipe\",\n      style: {\n        left: pipe.x + 'px',\n        top: pipe.y + 'px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pipeImage,\n        className: \"pipeImage\",\n        alt: \"pipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this));\n  }\n  // handle jumping\n  const handleJump = () => {\n    if (gameState === 'Play') {\n      setCharacterVY(-10);\n    }\n  };\n  const moveCharacter = time => {\n    if (lastTime) {\n      let dt = (time - lastTime) / 1000;\n      setCharacterY(characterY + characterVY * dt);\n      setCharacterVY(characterVY + 9.8 * dt);\n      checkCollisions();\n    }\n    lastTime = time;\n    if (gameState === 'Play') requestAnimationFrame(moveCharacter);\n  };\n\n  // update the game state\n  useEffect(() => {\n    if (gameState === 'Start') {\n      generatePipes();\n      setCharacterY(200);\n      setCharacterVY(0);\n      setScore(0);\n    } else if (gameState === 'Play') {\n      requestAnimationFrame(moveCharacter);\n      requestAnimationFrame(checkCollisions);\n\n      // update the score if the character passes a pipe\n      pipes.forEach(pipe => {\n        if (characterRef.current.offsetLeft > pipe.x + 50 && pipe.passed === false) {\n          setScore(score + 1);\n          pipe.passed = true;\n        }\n      });\n    }\n  }, [gameState, characterY, pipes, score]);\n\n  // add gravity to the character\n  useEffect(() => {\n    if (gameState === 'Play') {\n      setCharacterVY(characterVY + 0.2);\n    }\n  }, [gameState, characterVY]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: backgroundImage,\n        className: \"backgroundImage\",\n        alt: \"background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pipes\",\n      children: pipes.map((pipe, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pipe\",\n        style: {\n          left: pipe.x + 'px',\n          top: pipe.y + 'px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pipeImage,\n          className: \"pipeImage\",\n          alt: \"pipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character\",\n      ref: characterRef,\n      style: {\n        left: '100px',\n        top: characterY + 'px'\n      },\n      onClick: handleJump,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: characterImage,\n        className: \"characterImage\",\n        alt: \"character\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"startButton\",\n      onClick: () => setGameState('Play'),\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"endMessage\",\n      style: {\n        display: gameState === 'End' ? 'block' : 'none'\n      },\n      children: \"Game Over!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"WqB8IoYg9fB4IlcyfFUSRo59MNw=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useRef","backgroundImage","characterImage","pipeImage","Game","lastTime","intervalId","gameState","setGameState","score","setScore","characterY","setCharacterY","characterVY","setCharacterVY","pipes","setPipes","backgroundHeight","window","innerHeight","characterRef","handleResize","setBackgroundHeight","addEventListener","removeEventListener","document","handleKeyPress","event","key","generatePipes","x","y","passed","checkCollisions","current","characterRect","getBoundingClientRect","forEach","pipe","pipeRef","getElementById","pipeRect","top","bottom","right","left","map","index","handleJump","moveCharacter","time","dt","requestAnimationFrame","offsetLeft","display"],"sources":["C:/Users/jvpts11/Documents/GitHub/Trabalho_Web_21871/spring-dickson/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport backgroundImage from './Component/Resources/red_sun_ultimate.gif';\r\nimport characterImage from './Component/Resources/Spring_2.0.gif';\r\nimport pipeImage from './Component/Resources/Pipe.png';\r\n\r\nconst Game = () => {\r\n  let lastTime = 0;\r\n  let intervalId;\r\n  const [gameState, setGameState] = useState('Start'); // Start, Play, End\r\n  const [score, setScore] = useState(0);\r\n  const [characterY, setCharacterY] = useState(200);\r\n  const [characterVY, setCharacterVY] = useState(0);\r\n  const [pipes, setPipes] = useState([]);\r\n  const backgroundHeight = window.innerHeight;\r\n\r\n  // reference to the character element\r\n  const characterRef = useRef(null);\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n        setBackgroundHeight(window.innerHeight);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n    return () => {\r\n        window.removeEventListener('resize', handleResize);\r\n    };\r\n}, []);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', handleKeyPress);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyPress);\r\n    };\r\n  }, []);\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter' && gameState === 'Start') {\r\n      setGameState('Play');\r\n    }\r\n  };\r\n\r\n  // generate a new set of pipes\r\n  const generatePipes = () => {\r\n    setPipes([\r\n      { x: 500, y: -100, passed: false },\r\n      { x: 800, y: 150, passed: false },\r\n      { x: 1100, y: -50, passed: false },\r\n    ]);\r\n  };\r\n\r\n  // move the character based on its velocity\r\n  const checkCollisions = () => {\r\n    if (characterY < 0 || characterY > backgroundHeight) {\r\n      setGameState('End');\r\n    }\r\n  }\r\n\r\n    if(characterRef.current){\r\n    let characterRect = characterRef.current.getBoundingClientRect()\r\n    pipes.forEach((pipe) => {\r\n      let pipeRef = document.getElementById(`pipe${pipe.x}`)\r\n      if(pipeRef){\r\n        let pipeRect = pipeRef.getBoundingClientRect()\r\n        if (\r\n          characterRect.top < pipeRect.bottom &&\r\n          characterRect.bottom > pipeRect.top &&\r\n          characterRect.right > pipeRect.left &&\r\n          characterRect.left < pipeRect.right\r\n        ) {\r\n          // collision with a pipe\r\n          setGameState('End');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  {pipes.map((pipe, index) => (\r\n    <div\r\n      key={index}\r\n      id={`pipe${pipe.x}`}\r\n      className=\"pipe\"\r\n      style={{\r\n        left: pipe.x + 'px',\r\n        top: pipe.y + 'px',\r\n      }}\r\n    >\r\n      <img src={pipeImage} className=\"pipeImage\" alt=\"pipe\" />\r\n    </div>\r\n  ))}\r\n  // handle jumping\r\n  const handleJump = () => {\r\n    if (gameState === 'Play') {\r\n      setCharacterVY(-10);\r\n    }\r\n  };\r\n\r\n  const moveCharacter = (time) => {\r\n    if (lastTime) {\r\n      let dt = (time - lastTime) / 1000;\r\n      setCharacterY(characterY + characterVY * dt);\r\n      setCharacterVY(characterVY + 9.8 * dt);\r\n      checkCollisions();\r\n    }\r\n    lastTime = time;\r\n    if (gameState === 'Play') requestAnimationFrame(moveCharacter);\r\n  };\r\n\r\n  // update the game state\r\n  useEffect(() => {\r\n    if (gameState === 'Start') {\r\n      generatePipes();\r\n      setCharacterY(200);\r\n      setCharacterVY(0);\r\n      setScore(0);\r\n    } else if (gameState === 'Play') {\r\n      requestAnimationFrame(moveCharacter);\r\n      requestAnimationFrame(checkCollisions);\r\n\r\n      // update the score if the character passes a pipe\r\n      pipes.forEach((pipe) => {\r\n        if (\r\n          characterRef.current.offsetLeft > pipe.x + 50 &&\r\n          pipe.passed === false\r\n        ) {\r\n          setScore(score + 1);\r\n          pipe.passed = true;\r\n        }\r\n      });\r\n    }\r\n  }, [gameState, characterY, pipes, score]);\r\n\r\n  // add gravity to the character\r\n  useEffect(() => {\r\n    if (gameState === 'Play') {\r\n      setCharacterVY(characterVY + 0.2);\r\n    }\r\n  }, [gameState, characterVY]);\r\n\r\n  return (\r\n    <div className=\"Game\">\r\n      <div className=\"background\">\r\n        <img src={backgroundImage} className=\"backgroundImage\" alt=\"background\" />\r\n      </div>\r\n      <div className=\"pipes\">\r\n        {pipes.map((pipe, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"pipe\"\r\n            style={{\r\n              left: pipe.x + 'px',\r\n              top: pipe.y + 'px',\r\n            }}\r\n          >\r\n            <img src={pipeImage} className=\"pipeImage\" alt=\"pipe\" />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div\r\n        className=\"character\"\r\n        ref={characterRef}\r\n        style={{\r\n          left: '100px',\r\n          top: characterY + 'px',\r\n        }}\r\n        onClick={handleJump}\r\n      >\r\n        <img src={characterImage} className=\"characterImage\" alt=\"character\" />\r\n      </div>\r\n      <div className=\"score\">{score}</div>\r\n      <div className=\"startButton\" onClick={() => setGameState('Play')}>\r\n        Start\r\n      </div>\r\n      <div className=\"endMessage\" style={{ display: gameState === 'End' ? 'block' : 'none' }}>\r\n        Game Over!\r\n      </div>\r\n    </div>\r\n  );\r\n      };\r\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}