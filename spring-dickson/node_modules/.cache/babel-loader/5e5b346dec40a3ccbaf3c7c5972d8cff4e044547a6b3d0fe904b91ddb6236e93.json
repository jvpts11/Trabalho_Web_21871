{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jvpts11\\\\Documents\\\\GitHub\\\\Trabalho_Web_21871\\\\spring-dickson\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport backgroundImage from './Component/Resources/red_sun_ultimate.gif';\nimport characterImage from './Component/Resources/Spring_2.0.gif';\nimport pipeImage from './Component/Resources/Spring_2.0.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [gameState, setGameState] = useState('Start'); // Start, Play, End\n  const [score, setScore] = useState(0);\n  const [characterY, setCharacterY] = useState(200);\n  const [characterVY, setCharacterVY] = useState(0);\n  const [pipes, setPipes] = useState([]);\n\n  // reference to the character element\n  const characterRef = useRef(null);\n\n  // generate a new set of pipes\n  const generatePipes = () => {\n    setPipes([{\n      x: 500,\n      y: -100\n    }, {\n      x: 800,\n      y: 150\n    }, {\n      x: 1100,\n      y: -50\n    }]);\n  };\n\n  // move the character based on its velocity\n  const moveCharacter = () => {\n    setCharacterY(characterY + characterVY);\n    characterRef.current.style.top = characterY + 'px';\n  };\n\n  // check for collisions with pipes and screen edges\n  const checkCollisions = () => {\n    if (characterY < 0 || characterY > 480) {\n      // collision with top or bottom of screen\n      setGameState('End');\n    }\n    pipes.forEach(pipe => {\n      if (characterY > pipe.y && characterY < pipe.y + 200 && characterRef.current.offsetLeft > pipe.x && characterRef.current.offsetLeft < pipe.x + 50) {\n        // collision with a pipe\n        setGameState('End');\n      }\n    });\n  };\n\n  // handle jumping\n  const handleJump = () => {\n    if (gameState === 'Play') {\n      setCharacterVY(-10);\n    }\n  };\n\n  // update the game state\n  useEffect(() => {\n    if (gameState === 'Start') {\n      generatePipes();\n      setCharacterY(200);\n      setCharacterVY(0);\n      setScore(0);\n    } else if (gameState === 'Play') {\n      requestAnimationFrame(moveCharacter);\n      requestAnimationFrame(checkCollisions);\n\n      // update the score if the character passes a pipe\n      pipes.forEach(pipe => {\n        if (characterRef.current.offsetLeft > pipe.x + 50 && pipe.passed === false) {\n          setScore(score + 1);\n          pipe.passed = true;\n        }\n      });\n    }\n  }, [gameState, characterY, pipes, score]);\n\n  // add gravity to the character\n  useEffect(() => {\n    if (gameState === 'Play') {\n      setCharacterVY(characterVY + 0.5);\n    }\n  }, [gameState, characterVY]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: backgroundImage,\n        alt: \"background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pipes\",\n      children: pipes.map((pipe, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pipe\",\n        style: {\n          left: pipe.x + 'px',\n          top: pipe.y + 'px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pipeImage,\n          alt: \"pipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character\",\n      ref: characterRef,\n      style: {\n        left: '100px',\n        top: characterY + 'px'\n      },\n      onClick: handleJump,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: characterImage,\n        alt: \"character\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"startButton\",\n      onClick: () => setGameState('Play'),\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"endMessage\",\n      style: {\n        display: gameState === 'End' ? 'block' : 'none'\n      },\n      children: \"Game Over\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"5LUPWhzBXFtmxgUWucu1QWjsqYY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","backgroundImage","characterImage","pipeImage","App","gameState","setGameState","score","setScore","characterY","setCharacterY","characterVY","setCharacterVY","pipes","setPipes","characterRef","generatePipes","x","y","moveCharacter","current","style","top","checkCollisions","forEach","pipe","offsetLeft","handleJump","requestAnimationFrame","passed","map","index","left","display"],"sources":["C:/Users/jvpts11/Documents/GitHub/Trabalho_Web_21871/spring-dickson/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport backgroundImage from './Component/Resources/red_sun_ultimate.gif';\r\nimport characterImage from './Component/Resources/Spring_2.0.gif';\r\nimport pipeImage from './Component/Resources/Spring_2.0.gif';\r\n\r\nconst App = () => {\r\n  const [gameState, setGameState] = useState('Start'); // Start, Play, End\r\n  const [score, setScore] = useState(0);\r\n  const [characterY, setCharacterY] = useState(200);\r\n  const [characterVY, setCharacterVY] = useState(0);\r\n  const [pipes, setPipes] = useState([]);\r\n\r\n  // reference to the character element\r\n  const characterRef = useRef(null);\r\n\r\n  // generate a new set of pipes\r\n  const generatePipes = () => {\r\n    setPipes([\r\n      { x: 500, y: -100 },\r\n      { x: 800, y: 150 },\r\n      { x: 1100, y: -50 },\r\n    ]);\r\n  };\r\n\r\n  // move the character based on its velocity\r\n  const moveCharacter = () => {\r\n    setCharacterY(characterY + characterVY);\r\n    characterRef.current.style.top = characterY + 'px';\r\n  };\r\n\r\n  // check for collisions with pipes and screen edges\r\n  const checkCollisions = () => {\r\n    if (characterY < 0 || characterY > 480) {\r\n      // collision with top or bottom of screen\r\n      setGameState('End');\r\n    }\r\n\r\n    pipes.forEach((pipe) => {\r\n      if (\r\n        characterY > pipe.y &&\r\n        characterY < pipe.y + 200 &&\r\n        characterRef.current.offsetLeft > pipe.x &&\r\n        characterRef.current.offsetLeft < pipe.x + 50\r\n      ) {\r\n        // collision with a pipe\r\n        setGameState('End');\r\n      }\r\n    });\r\n  };\r\n\r\n  // handle jumping\r\n  const handleJump = () => {\r\n    if (gameState === 'Play') {\r\n      setCharacterVY(-10);\r\n    }\r\n  };\r\n\r\n  // update the game state\r\n  useEffect(() => {\r\n    if (gameState === 'Start') {\r\n      generatePipes();\r\n      setCharacterY(200);\r\n      setCharacterVY(0);\r\n      setScore(0);\r\n    } else if (gameState === 'Play') {\r\n      requestAnimationFrame(moveCharacter);\r\n      requestAnimationFrame(checkCollisions);\r\n\r\n      // update the score if the character passes a pipe\r\n      pipes.forEach((pipe) => {\r\n        if (\r\n          characterRef.current.offsetLeft > pipe.x + 50 &&\r\n          pipe.passed === false\r\n        ) {\r\n          setScore(score + 1);\r\n          pipe.passed = true;\r\n        }\r\n      });\r\n    }\r\n  }, [gameState, characterY, pipes, score]);\r\n\r\n  // add gravity to the character\r\n  useEffect(() => {\r\n    if (gameState === 'Play') {\r\n      setCharacterVY(characterVY + 0.5);\r\n    }\r\n  }, [gameState, characterVY]);\r\n\r\n  return (\r\n    <div className=\"Game\">\r\n           <div className=\"background\">\r\n        <img src={backgroundImage} alt=\"background\" />\r\n      </div>\r\n      <div className=\"pipes\">\r\n        {pipes.map((pipe, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"pipe\"\r\n            style={{\r\n              left: pipe.x + 'px',\r\n              top: pipe.y + 'px',\r\n            }}\r\n          >\r\n            <img src={pipeImage} alt=\"pipe\" />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div\r\n        className=\"character\"\r\n        ref={characterRef}\r\n        style={{\r\n          left: '100px',\r\n          top: characterY + 'px',\r\n        }}\r\n        onClick={handleJump}\r\n      >\r\n        <img src={characterImage} alt=\"character\" />\r\n      </div>\r\n      <div className=\"score\">{score}</div>\r\n      <div className=\"startButton\" onClick={() => setGameState('Play')}>\r\n        Start\r\n      </div>\r\n      <div className=\"endMessage\" style={{ display: gameState === 'End' ? 'block' : 'none' }}>\r\n        Game Over\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}