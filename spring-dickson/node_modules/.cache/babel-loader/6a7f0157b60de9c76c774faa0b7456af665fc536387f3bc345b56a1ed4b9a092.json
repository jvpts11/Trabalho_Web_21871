{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jvpts11\\\\Documents\\\\GitHub\\\\Trabalho_Web_21871\\\\spring-dickson\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport backgroundImage from './Component/Resources/red_sun_ultimate.gif';\nimport characterImage from './Component/Resources/Spring_2.0.gif';\nimport pipeImage from './Component/Resources/Pipe.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [gameState, setGameState] = useState('Start'); // Start, Play, End\n  const [score, setScore] = useState(0);\n  const [characterY, setCharacterY] = useState(200);\n  const [characterVY, setCharacterVY] = useState(0);\n  const [pipes, setPipes] = useState([]);\n\n  // reference to the character element\n  const characterRef = useRef(null);\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyPress);\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n    };\n  }, []);\n  const handleKeyPress = event => {\n    if (event.key === 'Enter' && gameState === 'Start') {\n      setGameState('Play');\n    }\n  };\n\n  // generate a new set of pipes\n  const generatePipes = () => {\n    setPipes([{\n      x: 500,\n      y: -100,\n      passed: false\n    }, {\n      x: 800,\n      y: 150,\n      passed: false\n    }, {\n      x: 1100,\n      y: -50,\n      passed: false\n    }]);\n  };\n\n  // move the character based on its velocity\n  const moveCharacter = () => {\n    setCharacterY(characterY + characterVY);\n    characterRef.current.style.top = characterY + 'px';\n  };\n\n  // check for collisions with pipes and screen edges\n  const checkCollisions = () => {\n    if (characterY < 0 || characterY > 480) {\n      // collision with top or bottom of screen\n      setGameState('End');\n    }\n    pipes.forEach(pipe => {\n      if (characterY > pipe.y && characterY < pipe.y + 200 && characterRef.current.offsetLeft > pipe.x && characterRef.current.offsetLeft < pipe.x + 50) {\n        // collision with a pipe\n        setGameState('End');\n      }\n    });\n  };\n\n  // handle jumping\n  const handleJump = () => {\n    if (gameState === 'Play') {\n      setCharacterVY(-10);\n    }\n  };\n\n  // update the game state\n  useEffect(() => {\n    if (gameState === 'Start') {\n      generatePipes();\n      setCharacterY(200);\n      setCharacterVY(0);\n      setScore(0);\n    } else if (gameState === 'Play') {\n      requestAnimationFrame(moveCharacter);\n      requestAnimationFrame(checkCollisions);\n\n      // update the score if the character passes a pipe\n      pipes.forEach(pipe => {\n        if (characterRef.current.offsetLeft > pipe.x + 50 && pipe.passed === false) {\n          setScore(score + 1);\n          pipe.passed = true;\n        }\n      });\n    }\n  }, [gameState, characterY, pipes, score]);\n\n  // add gravity to the character\n  useEffect(() => {\n    if (gameState === 'Play') {\n      setCharacterVY(characterVY + 0.5);\n    }\n  }, [gameState, characterVY]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: backgroundImage,\n        className: \"backgroundImage\",\n        alt: \"background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pipes\",\n      children: pipes.map((pipe, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pipe\",\n        style: {\n          left: pipe.x + 'px',\n          top: pipe.y + 'px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pipeImage,\n          alt: \"pipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character\",\n      ref: characterRef,\n      style: {\n        left: '100px',\n        top: characterY + 'px'\n      },\n      onClick: handleJump,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: characterImage,\n        className: \"characterImage\",\n        alt: \"character\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"startButton\",\n      onClick: () => setGameState('Play'),\n      style: {\n        display: gameState === 'Start' ? 'block' : 'none'\n      },\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"endMessage\",\n      style: {\n        display: gameState === 'End' ? 'block' : 'none'\n      },\n      children: [\"Game Over! Your score is \", score, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"+nOJV7A/1M8unEJnZ7JyUwYS2Ec=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useRef","backgroundImage","characterImage","pipeImage","Game","gameState","setGameState","score","setScore","characterY","setCharacterY","characterVY","setCharacterVY","pipes","setPipes","characterRef","document","addEventListener","handleKeyPress","removeEventListener","event","key","generatePipes","x","y","passed","moveCharacter","current","style","top","checkCollisions","forEach","pipe","offsetLeft","handleJump","requestAnimationFrame","map","index","left","display"],"sources":["C:/Users/jvpts11/Documents/GitHub/Trabalho_Web_21871/spring-dickson/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport backgroundImage from './Component/Resources/red_sun_ultimate.gif';\r\nimport characterImage from './Component/Resources/Spring_2.0.gif';\r\nimport pipeImage from './Component/Resources/Pipe.png';\r\n\r\nconst Game = () => {\r\n  const [gameState, setGameState] = useState('Start'); // Start, Play, End\r\n  const [score, setScore] = useState(0);\r\n  const [characterY, setCharacterY] = useState(200);\r\n  const [characterVY, setCharacterVY] = useState(0);\r\n  const [pipes, setPipes] = useState([]);\r\n\r\n  // reference to the character element\r\n  const characterRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', handleKeyPress);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyPress);\r\n    };\r\n  }, []);\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter' && gameState === 'Start') {\r\n      setGameState('Play');\r\n    }\r\n  };\r\n\r\n  // generate a new set of pipes\r\n  const generatePipes = () => {\r\n    setPipes([\r\n      { x: 500, y: -100, passed: false },\r\n      { x: 800, y: 150, passed: false },\r\n      { x: 1100, y: -50, passed: false },\r\n    ]);\r\n  };\r\n\r\n  // move the character based on its velocity\r\n  const moveCharacter = () => {\r\n    setCharacterY(characterY + characterVY);\r\n    characterRef.current.style.top = characterY + 'px';\r\n  };\r\n\r\n  // check for collisions with pipes and screen edges\r\n  const checkCollisions = () => {\r\n    if (characterY < 0 || characterY > 480) {\r\n      // collision with top or bottom of screen\r\n      setGameState('End');\r\n    }\r\n\r\n    pipes.forEach((pipe) => {\r\n      if (\r\n        characterY > pipe.y &&\r\n        characterY < pipe.y + 200 &&\r\n        characterRef.current.offsetLeft > pipe.x &&\r\n        characterRef.current.offsetLeft < pipe.x + 50\r\n      ) {\r\n        // collision with a pipe\r\n        setGameState('End');\r\n      }\r\n    });\r\n  };\r\n\r\n  // handle jumping\r\n  const handleJump = () => {\r\n    if (gameState === 'Play') {\r\n      setCharacterVY(-10);\r\n    }\r\n  };\r\n\r\n  // update the game state\r\n  useEffect(() => {\r\n    if (gameState === 'Start') {\r\n      generatePipes();\r\n      setCharacterY(200);\r\n      setCharacterVY(0);\r\n      setScore(0);\r\n    } else if (gameState === 'Play') {\r\n      requestAnimationFrame(moveCharacter);\r\n      requestAnimationFrame(checkCollisions);\r\n\r\n      // update the score if the character passes a pipe\r\n      pipes.forEach((pipe) => {\r\n        if (\r\n          characterRef.current.offsetLeft > pipe.x + 50 &&\r\n          pipe.passed === false\r\n        ) {\r\n          setScore(score + 1);\r\n          pipe.passed = true;\r\n        }\r\n      });\r\n    }\r\n  }, [gameState, characterY, pipes, score]);\r\n\r\n  // add gravity to the character\r\n  useEffect(() => {\r\n    if (gameState === 'Play') {\r\n      setCharacterVY(characterVY + 0.5);\r\n    }\r\n  }, [gameState, characterVY]);\r\n\r\n  return (\r\n    <div className=\"Game\">\r\n      <div className=\"background\">\r\n        <img src={backgroundImage} className=\"backgroundImage\" alt=\"background\" />\r\n      </div>\r\n      <div className=\"pipes\">\r\n        {pipes.map((pipe, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"pipe\"\r\n            style={{\r\n              left: pipe.x + 'px',\r\n              top: pipe.y + 'px',\r\n            }}\r\n          >\r\n            <img src={pipeImage} alt=\"pipe\" />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div\r\n        className=\"character\"\r\n        ref={characterRef}\r\n        style={{\r\n          left: '100px',\r\n          top: characterY + 'px',\r\n        }}\r\n        onClick={handleJump}\r\n      >\r\n        <img src={characterImage} className=\"characterImage\" alt=\"character\" />\r\n      </div>\r\n      <div className=\"score\">{score}</div>\r\n      <div\r\n        className=\"startButton\"\r\n        onClick={() => setGameState('Play')}\r\n        style={{ display: gameState === 'Start' ? 'block' : 'none' }}\r\n      >\r\n        Start\r\n      </div>\r\n      <div\r\n        className=\"endMessage\"\r\n        style={{ display: gameState === 'End' ? 'block' : 'none' }}\r\n      >\r\n        Game Over! Your score is {score}.\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}